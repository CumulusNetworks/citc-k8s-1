#
# Copyright (C) 2018 Cumulus Networks, Inc. All rights reserved
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# 
# https://www.debian.org/legal/licenses/mit
# 
---
- name: Set up the kubernetes cluster
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: _kubelet_conf
- block:
  - command: kubeadm config images pull
  - command: kubeadm --apiserver-advertise-address={{ servervars[ MASTER_HOST ].V4 }} --pod-network-cidr=10.244.0.0/16 --token=cumulu.soopersecrethere --ignore-preflight-errors=NumCPU init
  become: yes
  when: not _kubelet_conf.stat.exists

- name: Allow cumulus user to execute kubectl
  block:
  -  file:
      path: /home/cumulus/.kube
      state: directory
  - file:
      path: /home/cumulus/.kube/config
      state: absent
  - copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/cumulus/.kube/config
      remote_src: yes
      owner: cumulus
      group: cumulus
      mode: oug=rwx
    become: yes
  when: not _kubelet_conf.stat.exists

- name: Install and enable Flannel
  shell: ps aux | grep -q [f]lanneld
  ignore_errors: true
  register: _cni_running
- command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  when: _cni_running is failed

- name: Connect NetQ to the Kubernetes master
  command: netq config add agent kubernetes-monitor
- command: netq config restart agent

- name: Set up the dashboard and make it persist across reboots
  get_url:
    url: https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml
    dest: /home/cumulus/
- blockinfile:
    dest: /home/cumulus/kubernetes-dashboard.yaml
    insertafter: "args:"
    marker: "# {mark} ANSIBLE MANAGED BLOCK enable-skip-login"
    block: |6
                    - --enable-skip-login
- copy:
    src: dashboard-rolebindings.yaml
    dest: /home/cumulus/dashboard-rolebindings.yaml
    owner: cumulus
    group: cumulus
    mode: oug=rw
  register: _dashboard_rolebindings
- template:
    src: dashboard.sh.j2
    dest: /home/cumulus/dashboard.sh
    mode: "u=rwx,go=r"
  register: _dashboard_sh
- blockinfile:
    dest: /etc/rc.local
    insertbefore: "exit 0"
    marker: "# {mark} ANSIBLE MANAGED BLOCK dashboard"
    block: |
      su -c "cd /home/cumulus && ./dashboard.sh" cumulus
  become: yes
  register: _dashboard_rc
- command: ./dashboard.sh
  when: _dashboard_rolebindings is changed or _dashboard_sh is changed or _dashboard_rc is changed
...
